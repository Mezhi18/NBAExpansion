---
title: "The future of the NBA is on the Horizon"
subtitle: "Is it time for an expansion?"
author: 
  - Yan Mezhiborsky
thanks: "Code and data are available at: https://github.com/Mezhi18/NBAExpansion ."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
toc: true
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(knitr)
library(modelsummary)
library(tinytex)
library(lubridate)
library(viridis)
library(gt)
```


# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....

@gebru2021datasheets

# Data {#sec-data}

The data for this research paper was gathered from @bbref, a subsection of Sports Reference LLC. Sports Reference hosts many other subsections such as Baseball, Football, Soccer, and several college sports. From @bbref, we have access to extensive data, including individual player statistics, playoffs, and direct comparisons on the website.

The first data set includes the season summary from 1980 to 2024, this past season. From the specific table where the data was gathered, the per-game stats of each team by year are listed, along with percentages and the league average for the year, which we will focus on from this data set. Some of the variables included in this data set are points, assists, personal fouls, 3-point percentage, and several more. The main focus of the data set was points, assists, turnovers, blocks, steals, and total rebounds (the option was available to divide total rebounds into offensive and defensive rebounds per game). As these summaries are on the website in individual links, they needed to be individually downloaded and combined in @citeR. While it was a tedious process, the retrieval of data was done carefully and meticulously. In regards to cleaning this data set, other than combining all data sets, the year needed to be added for each season so that they would be distinguishable from one another. As the NBA season is played through two calendar years for simplicity, the decision was made to assign the calendar year in which the playoffs of that season were played (e.g., the 1999-2000 NBA Season was saved under the year 2000).Next, we added an additional column that gave us the amount of teams there were in each season as that colum did not exists in the original data set. From here, we created another data set solely focused on the league average of every NBA season. This data set was selected for many reasons, other than the fact that it contains the most important statistics such as points, assists, and rebounds as stated before, but it also includes some less used statistics that can be used to analyze the NBA.

The next data set includes some of the highest scoring games in NBA history. The @bbref link from which this data was gathered had a cutoff of 59 points in a game, so all the games recorded in this data set are from times when a player scored 59 points or more. In contrast to the previous data set, as these games were played on a single date, we do have the exact year they were played, but for consistency, the new date was again based on the year in which the playoffs were played, so even if the game was played in the fall of 2022 of the 2022-2023 NBA season, the year was saved as 2023. This needed to be carefully done as the postponement of the 2019-2020 NBA season due to the global pandemic, COVID-19, required a carefully chosen date for some of the games so that they would not accidentally fall in the range of the wrong season.

Lastly, we have the data set which is a summary of LeBron James' career. For this data set, very little cleaning was needed as @bbref creates rather useful data tables. The reason this data was chosen, aside from the fact that LeBron is one of the greatest players in the history of basketball, he entered the league around the time of its expansion and is still an active NBA player, making him not only the perfect choice but the only logical one as well.

As stated before the the data retrieved from @bbref was already rather clean, and for the sake of reproducibility and further updates on this topic and paper, it was decided to leave most of the unused stats within the clean data even if it was not used at this time.

```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false

NBA1980 <- read_csv("../data/raw_data/NBA1980.csv")
NBA1981 <- read_csv("../data/raw_data/NBA1981.csv")
NBA1982 <- read_csv("../data/raw_data/NBA1982.csv")
NBA1983 <- read_csv("../data/raw_data/NBA1983.csv")
NBA1984 <- read_csv("../data/raw_data/NBA1984.csv")
NBA1985 <- read_csv("../data/raw_data/NBA1985.csv")
NBA1986 <- read_csv("../data/raw_data/NBA1986.csv")
NBA1987 <- read_csv("../data/raw_data/NBA1987.csv")
NBA1988 <- read_csv("../data/raw_data/NBA1988.csv")
NBA1989 <- read_csv("../data/raw_data/NBA1989.csv")
NBA1990 <- read_csv("../data/raw_data/NBA1990.csv")
NBA1991 <- read_csv("../data/raw_data/NBA1991.csv")
NBA1992 <- read_csv("../data/raw_data/NBA1992.csv")
NBA1993 <- read_csv("../data/raw_data/NBA1993.csv")
NBA1994 <- read_csv("../data/raw_data/NBA1994.csv")
NBA1995 <- read_csv("../data/raw_data/NBA1995.csv")
NBA1996 <- read_csv("../data/raw_data/NBA1996.csv")
NBA1997 <- read_csv("../data/raw_data/NBA1997.csv")
NBA1998 <- read_csv("../data/raw_data/NBA1998.csv")
NBA1999 <- read_csv("../data/raw_data/NBA1999.csv")
NBA2000 <- read_csv("../data/raw_data/NBA2000.csv")
NBA2001 <- read_csv("../data/raw_data/NBA2001.csv")
NBA2002 <- read_csv("../data/raw_data/NBA2002.csv")
NBA2003 <- read_csv("../data/raw_data/NBA2003.csv")
NBA2004 <- read_csv("../data/raw_data/NBA2004.csv")
NBA2005 <- read_csv("../data/raw_data/NBA2005.csv")
NBA2006 <- read_csv("../data/raw_data/NBA2006.csv")
NBA2007 <- read_csv("../data/raw_data/NBA2007.csv")
NBA2008 <- read_csv("../data/raw_data/NBA2008.csv")
NBA2009 <- read_csv("../data/raw_data/NBA2009.csv")
NBA2010 <- read_csv("../data/raw_data/NBA2010.csv")
NBA2011 <- read_csv("../data/raw_data/NBA2011.csv")
NBA2012 <- read_csv("../data/raw_data/NBA2012.csv")
NBA2013 <- read_csv("../data/raw_data/NBA2013.csv")
NBA2014 <- read_csv("../data/raw_data/NBA2014.csv")
NBA2015 <- read_csv("../data/raw_data/NBA2015.csv")
NBA2016 <- read_csv("../data/raw_data/NBA2016.csv")
NBA2017 <- read_csv("../data/raw_data/NBA2017.csv")
NBA2018 <- read_csv("../data/raw_data/NBA2018.csv")
NBA2019 <- read_csv("../data/raw_data/NBA2019.csv")
NBA2020 <- read_csv("../data/raw_data/NBA2020.csv")
NBA2021 <- read_csv("../data/raw_data/NBA2021.csv")
NBA2022 <- read_csv("../data/raw_data/NBA2022.csv")
NBA2023 <- read_csv("../data/raw_data/NBA2023.csv")
NBA2024 <- read_csv("../data/raw_data/NBA2024.csv")

lebron_data <- read_csv("../data/raw_data/NBA_Lebron_James.csv")
scoring_data <- read.csv("../data/raw_data/All_time_Scoring.csv")

```

```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false

combined_data <- data.frame()

# Loop through the years 1980 to 2023
for(year in 1980:2024) {
  # Read the CSV file for the year
  file_path <- sprintf("../data/raw_data/NBA%d.csv", year)
  yearly_data <- read_csv(file_path)
  
  # Add a year column
  yearly_data$Year <- year
  
  # Combine with the main data frame
  combined_data <- bind_rows(combined_data, yearly_data)
}

# Add the number of teams to the combined data before selecting columns
combined_data <- combined_data %>%
  mutate(Num_Teams = case_when(
    Year <= 1980 ~ 22,
    Year > 1980 & Year <= 1988 ~ 23,
    Year == 1989 ~ 25,  
    Year > 1989 & Year <= 1995 ~ 27,
    Year > 1995 & Year <= 2004 ~ 29,
    TRUE ~ 30  # For years after 2004
  ))

# Now remove less important columns
full_nba_data <- combined_data %>%
  select(-G, -MP, -Rk)

# Creating table for league average
nba_data <- full_nba_data %>% 
  filter(Team == "League Average")

# Saving Clean Data
write.csv(nba_data, "../data/clean_data/nba_data.csv") #Only League Averages
write.csv(full_nba_data, "../data/clean_data/full_nba_data.csv") #All Teams

scoring_data$Date <- as.Date(scoring_data$Date)

scoring_data$Year <- year(scoring_data$Date) +
  ifelse(month(scoring_data$Date) > 8 | 
         (month(scoring_data$Date) == 8 & day(scoring_data$Date) > 12), 1, 0)

lebron_data$Season <- as.integer(lebron_data$Season)

write.csv(lebron_data, "../data/clean_data/clean_lebron_data.csv")

write.csv(scoring_data, "../data/clean_data/clean_scoring_data.csv")

```



# Model

The goal of our modelling strategy is twofold. Firstly, I want to analyze what how much other basic statistics such as assists and rebounds have on PPG as well as the affect the number of teams in the league in comparison with the year have on the same points per game. Next, I would like to predict the PPG of the next three seasons depending on the number of teams that are in the league. Considering the NBA would likely expand only one team at a time we will be focusing on the potential PPG over the next three years with 30 teams, 31 teams, and 32 teams. 

Here we briefly describe the Bayesian analysis model used to investigate the multiple linear regression model of PPG as described below.

## Model set-up

Define $y_i$ as the average number of points per game scored by a team through out the NBA season. Then $\alpha$ is the average assists per game, $\rho$ the average rebounds per game, $\beta$ is blocks per game, $\psi$ is steals per game and lastly, $\tau$ is turnovers per game, $\iota$ is the year, and $\eta$ is the number of teams.

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \rho_i + \beta_i + \xi_i + \tau_i + \iota_i + \eta_i \\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\rho &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\psi &\sim \mbox{Normal}(0,2.5) \\
\tau &\sim \mbox{Normal}(0,2.5) \\
\iota &\sim \mbox{Normal}(0,2.5) \\
\eta &\sim \mbox{Normal}(0,2.5) \\
\sigma &\sim \mbox{Exponential}(1) \\
\end{align}

```{r}
#| warning: false
#| include: false
#| message: false
#| echo: false

# Fit a multiple linear regression model
nba_model <- lm(PTS ~ Year + AST + TRB + STL + BLK + TOV + Num_Teams, data = nba_data)

create_future_data <- function(additional_teams) {
  latest_data <- tail(nba_data, 1)
  adjustment_factor <- 1 - 0.03 * additional_teams  # Each new team reduces stats by 3%
  data.frame(
    Year = c(2025, 2026, 2027),
    Num_Teams = latest_data$Num_Teams + additional_teams,
    AST = rep(latest_data$AST * adjustment_factor, 3),
    TRB = rep(latest_data$TRB * adjustment_factor, 3),
    STL = rep(latest_data$STL * adjustment_factor, 3),
    BLK = rep(latest_data$BLK * adjustment_factor, 3),
    TOV = rep(latest_data$TOV * adjustment_factor, 3)
  )
}

# Create data frames for each scenario
data_no_new_teams = create_future_data(0)
data_one_new_team = create_future_data(1)
data_two_new_teams = create_future_data(2)

predict_points <- function(data, scenario_name) {
  predictions <- predict(nba_model, newdata = data)
  return(data.frame(Teams = scenario_name, Year = c(2025, 2026, 2027), Predicted_PTS = predictions))
}

# Generate predictions for each scenario
predictions_no_new_teams <- predict_points(data_no_new_teams, "30")
predictions_one_new_team <- predict_points(data_one_new_team, "31")
predictions_two_new_teams <- predict_points(data_two_new_teams, "32")

# Combine predictions into a single data frame
all_predictions <- bind_rows(predictions_no_new_teams, predictions_one_new_team, predictions_two_new_teams)

# Reshape the data frame
wide_predictions <- all_predictions %>%
  pivot_wider(names_from = Year, values_from = Predicted_PTS, values_fill = list(Predicted_PTS = NA))



pred_table <- gt(wide_predictions) %>%
  tab_header(
    title = "Predicted Points Across Different Team Scenarios"
  ) %>%
  tab_style(
    style = list(
      cell_fill(color = "gray"),
      cell_text(color = "white", weight = "bold")
    ),
    locations = cells_column_labels(columns = everything())
  )
summary(nba_model)

```

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

#### Positive Relationship

We expect a positive relationship between the points per game the statistics above: assists, rebounds, steals, blocks. The higher these variables are the higher points per game should be. While some seem directly correlated to points such as assists, as points need to be scored for an assist to be recorded, other such as rebounds and defensive statistics, i.e. blocks and steals may not see to be directly correlated to points but they in fact are as from blocks and steals often point scoring opportunity are created as well as rebounds.

#### Negative Relationship

While for the previous variables we expect a positive relationship for number of teams and turnovers we expect a negative relationship, as of course turnovers would represent a point scoring opportunity lost, and the number of teams, the variable we will be focusing on, represent the dilution of talent per team as there would need to be a NBA expansion draft and team would lose some talent and the average team would be overall worse.


## Model Prediction

Taking the variables from the previous Season we will look to predict the average points per game of the NBA over the next three years. This will include no change in teams an additional team and two additional teams added to the NBA for the 2024-2025 NBA season. @fig-predict will have the predicted data for the following three years.

```{r}
#| message: false
#| echo: false
#| warning: false
#| label: fig-predict
#| fig-cap: PPG Predecition Through the 2027 Season

pred_table

```

As we can see in @fig-predict the points per game drops as the the number of teams increases and the points per game increases every year as predicted. This shows us that the number of teams will in fact affect the points scored but as players get used to the new NBA and more talent enters the league through the draft and free agency(for those un-drafted and/or entering the league at an older age) the points per game will continue to rise again, or in the case of no teams being added the points per game will just rise. 

We believe the is rather accurate when considering our historical data as we have  relatively high $R^2$ value at $R^2 = 0.961$. Other such details can be found in @sec-model-details in the appendix.



# Results

## Results 1
rr
```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-nbastats
#| fig-cap: NBA Statistics from 1980
#| fig-pos: 'H'

# Reshape data from wide to long format
nba_data_long <- nba_data %>%
  pivot_longer(cols = c(AST, TRB, PTS, STL, BLK, TOV), names_to = "Statistic", values_to = "Value")

line_colors <- c("darkgreen", "mediumseagreen", "turquoise", "deepskyblue", "dodgerblue", "darkblue")

exp_year <- c(1988, 1989, 1995, 2004) #Expansion Year

combined_plot <- ggplot(nba_data_long, aes(x = Year, y = Value, group = Statistic)) +
  geom_point(color = "black") +  # All points in black
  geom_line(aes(color = Statistic)) +  # Connect each point with a line per statistic
  scale_color_manual(values = line_colors) +
  geom_vline(xintercept = exp_year, color = "black", linetype = "dashed") +
  facet_wrap(~Statistic, scales = "free_y") +  # Facet by statistic, with free y scales
  labs(title = "NBA Stats Over Years", x = "Year", y = "Value") +
  theme_minimal() +
  theme(legend.position = "bottom")  # Adjusted to show the legend

combined_plot

```

### resulstss
rrr
```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-newnbastats
#| fig-cap: NBA Stats Since 2004
#| fig-pos: 'H'

current_nba_data_long <- nba_data %>%
  filter(Year >= 2004) %>%  
  pivot_longer(cols = c(AST, TRB, PTS, STL, BLK, TOV), names_to = "Statistic", values_to = "Value")

current_plot <- ggplot(current_nba_data_long, aes(x = Year, y = Value)) +
  geom_point(color = "black") +  
  geom_line(aes(color = Statistic)) + 
  scale_color_manual(values = line_colors) +
  facet_wrap(~Statistic, scales = "free_y") +  
  labs(title = "NBA Stats Over Years (Post-2004)", x = "Year", y = "Quantity") +
  theme_minimal() +
  theme(legend.position = "bottom")

current_plot
```

# Discussion
rrrrr
```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-scoringgraph
#| fig-cap: High Scoring games(59+ pts)
#| fig-pos: 'H'


ggplot(scoring_data, aes(x = Year, fill = factor(Year))) +
  geom_histogram(stat = "count", binwidth = 1, color = "black") +
  scale_fill_viridis(discrete = TRUE, option = "mako") +  # Using 'magma' for a warm color palette
  labs(title = "Count of 59+ Point Games",
       x = "Year",
       y = "Count of Games",
       fill = "Year") +
  theme_minimal() +
  theme(legend.position = "none")

```

rrrrr

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-scoringgraph1980
#| fig-cap: High Scoring games(59+ pts) Since 1980
#| fig-pos: 'H'


data_1980_onwards <- scoring_data %>%
  filter(Year >= 1980)

ggplot(data_1980_onwards, aes(x = Year, fill = as.factor(Year))) +
  geom_histogram(stat = "count", bins = length(unique(data_1980_onwards$Year)), color = "black") +
  scale_fill_viridis(discrete = TRUE) +  
  labs(title = "Count of 59+ Point Games since 1980",
       x = "Year Modified",
       y = "Count of Games") +
  theme_minimal() +
  theme(legend.position = "none")


```


hhh

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-scoringgraph70
#| fig-cap: High Scoring games(70+ pts) Since 1980
#| fig-pos: 'H'


data_1980_70pts_plus <- scoring_data %>%
  filter(Year >= 1980, PTS >= 70)

ggplot(data_1980_70pts_plus, aes(x = Year, fill = factor(Year))) +
  geom_histogram(stat = "count", bins = length(unique(data_1980_70pts_plus$Year)), color = "black") +
  scale_fill_viridis_d(begin = 0.2, end = 0.8, direction = 1, option = "magma") +  # Discrete viridis scale
  labs(title = "Count of 70+ Point Games since 1980",
       x = "Year Modified",
       y = "Count of Games") +
  theme_minimal() +
  theme(legend.position = "none")
```

hhh

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-lebronbar
#| fig-cap: Lebrons PPG as a Ratio of the League Average
#| fig-pos: 'H'

nba_avg_pts <- nba_data %>%
  group_by(Year) %>%
  summarize(Avg_PTS = mean(PTS, na.rm = TRUE))

comparison_data <- lebron_data %>%
  rename(Year = Season) %>%  # Rename Season to Year for merging
  left_join(nba_avg_pts, by = "Year") %>%
  mutate(Ratio = PTS / Avg_PTS)

ggplot(comparison_data, aes(x = Year, y = Ratio, fill = Year)) +
  geom_bar(stat = "identity", color = "black") +
  labs(title = "LeBron's PTS as a Ratio to NBA Average PTS Across Seasons",
       x = "Year",
       y = "Ratio of LeBron's PTS to NBA Average PTS") +
  theme_minimal() +
  theme(legend.position = "none")

```

hhh

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| label: fig-lebronarea
#| fig-cap: League Average PPG vs Lebrons PPG
#| fig-pos: 'H'


# Calculate average points per season for the NBA
nba_avg_pts <- nba_data %>%
  group_by(Year) %>%
  summarize(Avg_PTS = mean(PTS, na.rm = TRUE))

fa_year <- c(2010, 2014, 2018)

# Prepare comparison data by joining LeBron's data with NBA average points
comparison_data <- lebron_data %>%
  rename(Year = Season) %>%
  left_join(nba_avg_pts, by = "Year")

# Create an area graph for LeBron's points and NBA average points
ggplot(comparison_data, aes(x = Year)) +
  geom_area(aes(y = Avg_PTS), fill = "blue",alpha = 0.5, color = "navy") +
  geom_area(aes(y = PTS), fill = "maroon", alpha = 0.8, color = "darkred" ) +
  labs(title = "Comparison of LeBron's PTS vs. NBA Average PTS Across Seasons",
       x = "Season",
       y = "Points") +
  geom_vline(xintercept = fa_year, color = "black", linetype = "dashed") +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 12)) +
  scale_fill_manual(values = c("blue", "maroon"),
                    labels = c("NBA Avg PTS", "LeBron PTS"),
                    name = "Legend")
```

rselts


discussions
## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}

# Additional data details

# Model details {#sec-model-details}

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| fig-cap: Linear NBA Model
#| fig-pos: 'H'

modelsummary(
  list("Points Model" = nba_model),
  fmt = 2
  )
```



## Posterior predictive check





## Diagnostics







\newpage


# References

