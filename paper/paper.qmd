---
title: "Is it time for an NBA expansion?"
subtitle: "My subtitle if needed"
author: 
  - Yan Mezhiborsky
thanks: "Code and data are available at: https://github.com/Mezhi18/NBAExpansion ."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
toc: true
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(knitr)
library(modelsummary)
library(tinytex)
library(lubridate)
library(viridis)
library(kableExtra)
```


# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....

@gebru2021datasheets

# Data {#sec-data}


```{r}
#| include: false
#| warning: false
#| message: false

NBA1980 <- read_csv("../data/raw_data/NBA1980.csv")
NBA1981 <- read_csv("../data/raw_data/NBA1981.csv")
NBA1982 <- read_csv("../data/raw_data/NBA1982.csv")
NBA1983 <- read_csv("../data/raw_data/NBA1983.csv")
NBA1984 <- read_csv("../data/raw_data/NBA1984.csv")
NBA1985 <- read_csv("../data/raw_data/NBA1985.csv")
NBA1986 <- read_csv("../data/raw_data/NBA1986.csv")
NBA1987 <- read_csv("../data/raw_data/NBA1987.csv")
NBA1988 <- read_csv("../data/raw_data/NBA1988.csv")
NBA1989 <- read_csv("../data/raw_data/NBA1989.csv")
NBA1990 <- read_csv("../data/raw_data/NBA1990.csv")
NBA1991 <- read_csv("../data/raw_data/NBA1991.csv")
NBA1992 <- read_csv("../data/raw_data/NBA1992.csv")
NBA1993 <- read_csv("../data/raw_data/NBA1993.csv")
NBA1994 <- read_csv("../data/raw_data/NBA1994.csv")
NBA1995 <- read_csv("../data/raw_data/NBA1995.csv")
NBA1996 <- read_csv("../data/raw_data/NBA1996.csv")
NBA1997 <- read_csv("../data/raw_data/NBA1997.csv")
NBA1998 <- read_csv("../data/raw_data/NBA1998.csv")
NBA1999 <- read_csv("../data/raw_data/NBA1999.csv")
NBA2000 <- read_csv("../data/raw_data/NBA2000.csv")
NBA2001 <- read_csv("../data/raw_data/NBA2001.csv")
NBA2002 <- read_csv("../data/raw_data/NBA2002.csv")
NBA2003 <- read_csv("../data/raw_data/NBA2003.csv")
NBA2004 <- read_csv("../data/raw_data/NBA2004.csv")
NBA2005 <- read_csv("../data/raw_data/NBA2005.csv")
NBA2006 <- read_csv("../data/raw_data/NBA2006.csv")
NBA2007 <- read_csv("../data/raw_data/NBA2007.csv")
NBA2008 <- read_csv("../data/raw_data/NBA2008.csv")
NBA2009 <- read_csv("../data/raw_data/NBA2009.csv")
NBA2010 <- read_csv("../data/raw_data/NBA2010.csv")
NBA2011 <- read_csv("../data/raw_data/NBA2011.csv")
NBA2012 <- read_csv("../data/raw_data/NBA2012.csv")
NBA2013 <- read_csv("../data/raw_data/NBA2013.csv")
NBA2014 <- read_csv("../data/raw_data/NBA2014.csv")
NBA2015 <- read_csv("../data/raw_data/NBA2015.csv")
NBA2016 <- read_csv("../data/raw_data/NBA2016.csv")
NBA2017 <- read_csv("../data/raw_data/NBA2017.csv")
NBA2018 <- read_csv("../data/raw_data/NBA2018.csv")
NBA2019 <- read_csv("../data/raw_data/NBA2019.csv")
NBA2020 <- read_csv("../data/raw_data/NBA2020.csv")
NBA2021 <- read_csv("../data/raw_data/NBA2021.csv")
NBA2022 <- read_csv("../data/raw_data/NBA2022.csv")
NBA2023 <- read_csv("../data/raw_data/NBA2023.csv")
NBA2024 <- read_csv("../data/raw_data/NBA2024.csv")

lebron_data <- read_csv("../data/raw_data/NBA_Lebron_James.csv")
scoring_data <- read.csv("../data/raw_data/All_time_Scoring.csv")

```

```{r}
#| include: false
#| warning: false
#| message: false

combined_data <- data.frame()

# Loop through the years 1980 to 2023
for(year in 1980:2024) {
  # Read the CSV file for the year
  file_path <- sprintf("../data/raw_data/NBA%d.csv", year)
  yearly_data <- read_csv(file_path)
  
  # Add a year column
  yearly_data$Year <- year
  
  # Combine with the main data frame
  combined_data <- bind_rows(combined_data, yearly_data)
}

# Add the number of teams to the combined data before selecting columns
combined_data <- combined_data %>%
  mutate(Num_Teams = case_when(
    Year <= 1980 ~ 22,
    Year > 1980 & Year <= 1988 ~ 23,
    Year == 1989 ~ 25,  
    Year > 1989 & Year <= 1995 ~ 27,
    Year > 1995 & Year <= 2004 ~ 29,
    TRUE ~ 30  # For years after 2004
  ))

# Now remove less important columns
full_nba_data <- combined_data %>%
  select(-G, -MP, -Rk)

# Creating table for league average
nba_data <- full_nba_data %>% 
  filter(Team == "League Average")

# Saving Clean Data
write.csv(nba_data, "../data/clean_data/nba_data.csv", row.names = FALSE) #Only League Averages
write.csv(full_nba_data, "../data/clean_data/full_nba_data.csv", row.names = FALSE) #All Teams

scoring_data$Date <- as.Date(scoring_data$Date)

scoring_data$Year <- year(scoring_data$Date) +
  ifelse(month(scoring_data$Date) > 8 | 
         (month(scoring_data$Date) == 8 & day(scoring_data$Date) > 12), 1, 0)

lebron_data$Season <- as.integer(lebron_data$Season)


```

Talk more about it.



Talk way more about it. 



# Model

The goal of our modelling strategy is twofold. Firstly, I want to analyze what how much other basic statistics such as assists and rebounds have on PPG as well as the affect the number of teams in the league in comparison with the year have on the same points per game. Next, I would like to predict the PPG of the next three seasons depending on the number of teams that are in the league. Considering the NBA would likely expand only one team at a time we will be focusing on the potential PPG over the next three years with 30 teams, 31 teams, and 32 teams. 

Here we briefly describe the Bayesian analysis model used to investigate the multiple linear regression model of PPG as described below.

## Model set-up

Define $y_i$ as the average number of points per game scored by a team through out the NBA season. Then $\alpha$ is the average assists per game, $\rho$ the average rebounds per game, $\beta$ is blocks per game, $\psi$ is steals per game and lastly, $\tau$ is turnovers per game, $\iota$ is the year, and $\eta$ is the number of teams.

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \rho_i + \beta_i + \xi_i + \tau_i + \iota_i + \eta_i \\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\rho &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\psi &\sim \mbox{Normal}(0,2.5) \\
\tau &\sim \mbox{Normal}(0,2.5) \\
\iota &\sim \mbox{Normal}(0,2.5) \\
\eta &\sim \mbox{Normal}(0,2.5) \\
\sigma &\sim \mbox{Exponential}(1) \\
\end{align}

```{r}
#| warning: false
#| message: false
#| include: false
#| label: fig-predict
#| fig-cap: PPG Predecition Through the 2027 Season

# Fit a multiple linear regression model
nba_model <- lm(PTS ~ Year + AST + TRB + STL + BLK + TOV + Num_Teams, data = nba_data)

create_future_data <- function(additional_teams) {
  latest_data <- tail(nba_data, 1)
  adjustment_factor <- 1 - 0.03 * additional_teams  # Each new team reduces stats by 3%
  data.frame(
    Year = c(2025, 2026, 2027),
    Num_Teams = latest_data$Num_Teams + additional_teams,
    AST = rep(latest_data$AST * adjustment_factor, 3),
    TRB = rep(latest_data$TRB * adjustment_factor, 3),
    STL = rep(latest_data$STL * adjustment_factor, 3),
    BLK = rep(latest_data$BLK * adjustment_factor, 3),
    TOV = rep(latest_data$TOV * adjustment_factor, 3)
  )
}

# Create data frames for each scenario
data_no_new_teams = create_future_data(0)
data_one_new_team = create_future_data(1)
data_two_new_teams = create_future_data(2)

predict_points <- function(data, scenario_name) {
  predictions <- predict(nba_model, newdata = data)
  return(data.frame(Teams = scenario_name, Year = c(2025, 2026, 2027), Predicted_PTS = predictions))
}

# Generate predictions for each scenario
predictions_no_new_teams <- predict_points(data_no_new_teams, "30 Teams")
predictions_one_new_team <- predict_points(data_one_new_team, "31 Teams")
predictions_two_new_teams <- predict_points(data_two_new_teams, "32 Teams")

# Combine predictions into a single data frame
all_predictions <- bind_rows(predictions_no_new_teams, predictions_one_new_team, predictions_two_new_teams)

# Reshape the data frame
wide_predictions <- all_predictions %>%
  pivot_wider(names_from = Year, values_from = Predicted_PTS, values_fill = list(Predicted_PTS = NA))

# Print the reshaped data frame
wide_predictions

```





We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...




# Results



```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| label: fig-nbastats
#| fig-cap: NBA Statistics from 1980

# Reshape data from wide to long format
nba_data_long <- nba_data %>%
  pivot_longer(cols = c(AST, TRB, PTS, STL, BLK, TOV), names_to = "Statistic", values_to = "Value")

line_colors <- c("darkgreen", "mediumseagreen", "turquoise", "deepskyblue", "dodgerblue", "darkblue")

exp_year <- c(1988, 1989, 1995, 2004) #Expansion Year

combined_plot <- ggplot(nba_data_long, aes(x = Year, y = Value, group = Statistic)) +
  geom_point(color = "black") +  # All points in black
  geom_line(aes(color = Statistic)) +  # Connect each point with a line per statistic
  scale_color_manual(values = line_colors) +
  geom_vline(xintercept = exp_year, color = "black", linetype = "dashed") +
  facet_wrap(~Statistic, scales = "free_y") +  # Facet by statistic, with free y scales
  labs(title = "NBA Stats Over Years", x = "Year", y = "Value") +
  theme_minimal() +
  theme(legend.position = "bottom")  # Adjusted to show the legend

combined_plot

```


```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-newnbastats
#| fig-cap: NBA Stats Since 2004

current_nba_data_long <- nba_data %>%
  filter(Year >= 2004) %>%  
  pivot_longer(cols = c(AST, TRB, PTS, STL, BLK, TOV), names_to = "Statistic", values_to = "Value")

current_plot <- ggplot(current_nba_data_long, aes(x = Year, y = Value)) +
  geom_point(color = "black") +  
  geom_line(aes(color = Statistic)) + 
  scale_color_manual(values = line_colors) +
  facet_wrap(~Statistic, scales = "free_y") +  
  labs(title = "NBA Stats Over Years (Post-2004)", x = "Year", y = "Quantity") +
  theme_minimal() +
  theme(legend.position = "bottom")

current_plot
```


```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-scoringgraph
#| fig-cap: High Scoring games(59+ pts)


ggplot(scoring_data, aes(x = Year, fill = factor(Year))) +
  geom_histogram(stat = "count", binwidth = 1, color = "black") +
  scale_fill_viridis(discrete = TRUE, option = "mako") +  # Using 'magma' for a warm color palette
  labs(title = "Count of 59+ Point Games",
       x = "Year",
       y = "Count of Games",
       fill = "Year") +
  theme_minimal() +
  theme(legend.position = "none")

```

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-scoringgraph1980
#| fig-cap: High Scoring games(59+ pts) Since 1980


data_1980_onwards <- scoring_data %>%
  filter(Year >= 1980)

ggplot(data_1980_onwards, aes(x = Year, fill = as.factor(Year))) +
  geom_histogram(stat = "count", bins = length(unique(data_1980_onwards$Year)), color = "black") +
  scale_fill_viridis(discrete = TRUE) +  
  labs(title = "Count of 59+ Point Games since 1980",
       x = "Year Modified",
       y = "Count of Games") +
  theme_minimal() +
  theme(legend.position = "none")


```

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-scoringgraph70
#| fig-cap: High Scoring games(70+ pts) Since 1980


data_1980_70pts_plus <- scoring_data %>%
  filter(Year >= 1980, PTS >= 70)

ggplot(data_1980_70pts_plus, aes(x = Year, fill = factor(Year))) +
  geom_histogram(stat = "count", bins = length(unique(data_1980_70pts_plus$Year)), color = "black") +
  scale_fill_viridis_d(begin = 0.2, end = 0.8, direction = 1, option = "magma") +  # Discrete viridis scale
  labs(title = "Count of 70+ Point Games since 1980",
       x = "Year Modified",
       y = "Count of Games") +
  theme_minimal() +
  theme(legend.position = "none")
```



```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| label: fig-lebronbar
#| fig-cap: Lebrons PPG as a Ratio of the League Average

nba_avg_pts <- nba_data %>%
  group_by(Year) %>%
  summarize(Avg_PTS = mean(PTS, na.rm = TRUE))

comparison_data <- lebron_data %>%
  rename(Year = Season) %>%  # Rename Season to Year for merging
  left_join(nba_avg_pts, by = "Year") %>%
  mutate(Ratio = PTS / Avg_PTS)

ggplot(comparison_data, aes(x = Year, y = Ratio, fill = Year)) +
  geom_bar(stat = "identity", color = "black") +
  labs(title = "LeBron's PTS as a Ratio to NBA Average PTS Across Seasons",
       x = "Year",
       y = "Ratio of LeBron's PTS to NBA Average PTS") +
  theme_minimal() +
  theme(legend.position = "none")

```



```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| label: fig-lebronarea
#| fig-cap: League Average PPG vs Lebrons PPG


# Calculate average points per season for the NBA
nba_avg_pts <- nba_data %>%
  group_by(Year) %>%
  summarize(Avg_PTS = mean(PTS, na.rm = TRUE))

fa_year <- c(2010, 2014, 2018)

# Prepare comparison data by joining LeBron's data with NBA average points
comparison_data <- lebron_data %>%
  rename(Year = Season) %>%
  left_join(nba_avg_pts, by = "Year")

# Create an area graph for LeBron's points and NBA average points
ggplot(comparison_data, aes(x = Year)) +
  geom_area(aes(y = Avg_PTS), fill = "blue",alpha = 0.5, color = "navy") +
  geom_area(aes(y = PTS), fill = "maroon", alpha = 0.8, color = "darkred" ) +
  labs(title = "Comparison of LeBron's PTS vs. NBA Average PTS Across Seasons",
       x = "Season",
       y = "Points") +
  geom_vline(xintercept = fa_year, color = "black", linetype = "dashed") +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 12)) +
  scale_fill_manual(values = c("blue", "maroon"),
                    labels = c("NBA Avg PTS", "LeBron PTS"),
                    name = "Legend")
```



# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}

# Additional data details

# Model details {#sec-model-details}

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| fig-cap: Linear NBA Model

modelsummary(
  list("Points Model" = nba_model),
  fmt = 2
  )
```



## Posterior predictive check





## Diagnostics







\newpage


# References

